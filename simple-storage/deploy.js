const ethers = require("ethers");
const fs = require("fs-extra");
require("dotenv").config();

async function main() {
    const provider = new ethers.providers.JsonRpcProvider(process.env.RPC_URL);
    const wallet = new ethers.Wallet(process.env.PRIVATE_KEY, provider);

    //##########>>>>>>>>Start<<<<<<<<<<##### private key encryption 
    // const encryptedFileJson = fs.readFileSync("./.encryptedPrivateKey.json", "utf-8");
    // let wallet = new ethers.Wallet.fromEncryptedJsonSync(encryptedFileJson, process.env.PRIVATE_KEY_PASSWORD);
    // wallet = await wallet.connect(provider)
    //##########>>>>>>>>End<<<<<<<<<<##### private key encryption 

    const abi = fs.readFileSync("SimpleStorage_sol_SimpleStorage.abi", "utf-8");
    const binary = fs.readFileSync("SimpleStorage_sol_SimpleStorage.bin", "utf-8");

    console.log('Deploy Contract');
    const contactFactory = new ethers.ContractFactory(abi, binary, wallet);
    console.log("Deploying contract");
    const contract = await contactFactory.deploy();
    await contract.deployTransaction.wait(1);
    console.log('contract address: ', contract.address);

    const currentFavouriteNumber = await contract.retrieve();
    console.log('currentFavouriteNumber: ', currentFavouriteNumber.toString());
    const transactionResponse = await contract.store("90");
    const transactionRecipt = await transactionResponse.wait(1);
    const updatedFavouriteNumber = await contract.retrieve();
    console.log('updatedFavouriteNumber: ', updatedFavouriteNumber.toString());
    // console.log('Deploy with Only Transaction Data');
    // const nonce = await wallet.getTransactionCount();
    // const tx = {
    //     nonce,
    //     to: null,
    //     data: "0x608060405234801561001057600080fd5b5061080e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063092a18201461005c5780632e64cec11461008d57806374fdf7dd146100ab578063795fff1d146100c7578063b2ac62ef146100e3575b600080fd5b610076600480360381019061007191906104cc565b610113565b6040516100849291906105a4565b60405180910390f35b6100956101cf565b6040516100a29190610589565b60405180910390f35b6100c560048036038101906100c0919061049f565b6101d8565b005b6100e160048036038101906100dc9190610443565b6101ff565b005b6100fd60048036038101906100f891906103fa565b61028f565b60405161010a9190610589565b60405180910390f35b6001818154811061012357600080fd5b906000526020600020906002020160009150905080600001549080600101805461014c906106c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610178906106c4565b80156101c55780601f1061019a576101008083540402835291602001916101c5565b820191906000526020600020905b8154815290600101906020018083116101a857829003601f168201915b5050505050905082565b60008054905090565b807affffffffffffffffffffffffffffffffffffffffffffffffffffff1660008190555050565b600160405180604001604052808381526020018481525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010190805190602001906102659291906102bd565b505050806002836040516102799190610572565b9081526020016040518091039020819055505050565b6002818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b8280546102c9906106c4565b90600052602060002090601f0160209004810192826102eb5760008555610332565b82601f1061030457805160ff1916838001178555610332565b82800160010185558215610332579182015b82811115610331578251825591602001919060010190610316565b5b50905061033f9190610343565b5090565b5b8082111561035c576000816000905550600101610344565b5090565b600061037361036e846105f9565b6105d4565b90508281526020810184848401111561038f5761038e61078a565b5b61039a848285610682565b509392505050565b600082601f8301126103b7576103b6610785565b5b81356103c7848260208601610360565b91505092915050565b6000813590506103df816107aa565b92915050565b6000813590506103f4816107c1565b92915050565b6000602082840312156104105761040f610794565b5b600082013567ffffffffffffffff81111561042e5761042d61078f565b5b61043a848285016103a2565b91505092915050565b6000806040838503121561045a57610459610794565b5b600083013567ffffffffffffffff8111156104785761047761078f565b5b610484858286016103a2565b9250506020610495858286016103e5565b9150509250929050565b6000602082840312156104b5576104b4610794565b5b60006104c3848285016103d0565b91505092915050565b6000602082840312156104e2576104e1610794565b5b60006104f0848285016103e5565b91505092915050565b60006105048261062a565b61050e8185610635565b935061051e818560208601610691565b61052781610799565b840191505092915050565b600061053d8261062a565b6105478185610646565b9350610557818560208601610691565b80840191505092915050565b61056c81610678565b82525050565b600061057e8284610532565b915081905092915050565b600060208201905061059e6000830184610563565b92915050565b60006040820190506105b96000830185610563565b81810360208301526105cb81846104f9565b90509392505050565b60006105de6105ef565b90506105ea82826106f6565b919050565b6000604051905090565b600067ffffffffffffffff82111561061457610613610756565b5b61061d82610799565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60007affffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156106af578082015181840152602081019050610694565b838111156106be576000848401525b50505050565b600060028204905060018216806106dc57607f821691505b602082108114156106f0576106ef610727565b5b50919050565b6106ff82610799565b810181811067ffffffffffffffff8211171561071e5761071d610756565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6107b381610651565b81146107be57600080fd5b50565b6107ca81610678565b81146107d557600080fd5b5056fea2646970667358221220f847c7ab4dca161fef84aaadb85ba8a34c8cccd98994bbbcbab5ede59c6207ae64736f6c63430008070033",
    //     gasPrice: 20000000000,
    //     gasLimit: 6721975,
    //     value: 0,
    //     chainId: 1337
    // }
    // const sendTxResponse = await wallet.sendTransaction(tx);
    // await sendTxResponse.wait(1)
    // console.log('sendTxResponse: ', sendTxResponse);
}

main().then(console.log).catch(console.log)